[2020-04-23 22:39:03,480] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-23 22:39:03,486] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-04-23 22:39:03,502] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-23 22:39:03,663] TRACE [Controller id=0] All leaders = __consumer_offsets-49 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),fcm-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-13 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),apn-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),fcm-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),fcm-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),apn-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),fcm-2 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),apn-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),apn-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),apn-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),fcm-4 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2020-04-23 22:39:05,804] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-23 22:39:05,806] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-23 22:39:05,806] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-23 22:39:05,807] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-23 22:39:05,809] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-23 22:39:05,813] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-23 22:39:05,815] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-23 22:39:05,820] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-23 22:39:05,823] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-23 22:39:05,823] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-23 22:39:05,826] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-04-23 22:41:05,348] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@2286778, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-23 22:41:09,231] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-23 22:41:09,286] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-23 22:41:09,287] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-23 22:41:09,294] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-23 22:41:09,300] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-23 22:41:09,305] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-23 22:41:09,374] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-04-23 22:41:09,382] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-23 22:41:09,392] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-23 22:41:09,439] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-23 22:41:09,444] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-23 22:41:09,444] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-23 22:41:09,444] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-23 22:41:09,445] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-23 22:41:09,448] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-23 22:41:09,449] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-23 22:41:09,449] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-23 22:41:09,450] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-23 22:41:09,450] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-23 22:41:09,461] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-23 22:41:09,462] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-23 22:41:09,478] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-23 22:41:09,479] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-23 22:41:09,480] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-23 22:41:09,481] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-23 22:41:09,496] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-23 22:41:09,498] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-23 22:41:09,502] INFO [RequestSendThread controllerId=0] Controller 0 connected to admina-GL553VE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-23 22:41:09,576] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-23 22:41:09,577] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-23 22:41:09,577] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-23 22:41:09,577] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-23 22:41:09,578] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-04-23 22:41:09,607] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-23 22:41:14,608] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-23 22:41:14,608] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-23 22:41:14,609] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-23 22:46:14,610] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-23 22:46:14,610] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-23 22:46:14,610] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-23 22:51:14,611] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-23 22:51:14,611] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-23 22:51:14,611] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-23 22:56:14,613] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-23 22:56:14,613] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-23 22:56:14,614] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
