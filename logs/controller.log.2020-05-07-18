[2020-05-07 18:03:20,600] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:03:20,618] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:03:20,618] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:08:20,619] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:08:20,619] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:08:20,619] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:13:20,620] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:13:20,620] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:13:20,621] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:18:20,621] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:18:20,622] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:18:20,622] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:23:20,622] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:23:20,628] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:23:20,629] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:28:20,630] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:28:20,630] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:28:20,631] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:33:20,631] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:33:20,632] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:33:20,632] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:38:20,633] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:38:20,643] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:38:20,644] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:43:20,645] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:43:20,645] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:43:20,645] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:48:20,645] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:48:20,645] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:48:20,646] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:53:20,646] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:53:20,646] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:53:20,646] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-05-07 18:55:42,552] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-05-07 18:55:42,626] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-05-07 18:55:42,745] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-05-07 18:55:42,765] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-05-07 18:55:42,783] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-05-07 18:55:42,791] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-05-07 18:55:42,791] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-05-07 18:55:42,941] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-05-07 18:55:43,206] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-05-07 18:55:43,206] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-05-07 18:55:43,220] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-05-07 18:55:43,225] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-05-07 18:55:43,227] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-05-07 18:55:43,271] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 31) (kafka.controller.KafkaController)
[2020-05-07 18:55:43,278] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-05-07 18:55:43,282] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-05-07 18:55:43,351] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-05-07 18:55:43,363] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-05-07 18:55:43,364] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-05-07 18:55:43,364] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-05-07 18:55:43,364] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-05-07 18:55:43,389] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-05-07 18:55:43,389] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-05-07 18:55:43,392] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-05-07 18:55:43,392] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-05-07 18:55:43,393] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-05-07 18:55:43,456] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-05-07 18:55:43,457] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-05-07 18:55:43,457] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-05-07 18:55:43,458] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-05-07 18:55:43,458] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-05-07 18:55:43,458] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-05-07 18:55:43,460] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-05-07 18:55:43,461] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-05-07 18:55:43,462] INFO [RequestSendThread controllerId=0] Controller 0 connected to admina-GL553VE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-05-07 18:55:43,469] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-05-07 18:55:43,471] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-05-07 18:55:43,471] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-05-07 18:55:43,471] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-05-07 18:55:43,472] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-05-07 18:55:43,512] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-05-07 18:55:48,514] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-05-07 18:55:48,514] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-05-07 18:55:48,515] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
