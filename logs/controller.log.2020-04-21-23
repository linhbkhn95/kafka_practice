[2020-04-21 23:02:53,892] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:02:53,893] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:02:53,894] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-21 23:07:53,894] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:07:53,894] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:07:53,894] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-21 23:12:53,895] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:12:53,896] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:12:53,896] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-21 23:17:53,897] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:17:53,904] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:17:53,904] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-21 23:22:53,905] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:22:53,921] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:22:53,921] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-21 23:27:53,921] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:27:53,923] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:27:53,923] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-21 23:30:52,313] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-21 23:30:52,320] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-04-21 23:30:52,603] INFO [RequestSendThread controllerId=0] Controller 0 connected to admina-GL553VE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-21 23:32:53,923] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:32:53,937] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:32:53,938] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-21 23:32:53,940] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-21 23:32:53,941] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-21 23:33:27,280] INFO [Controller id=0] New topics: [Set(fcm)], deleted topics: [Set()], new partition replica assignment [Map(fcm-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-21 23:33:27,280] INFO [Controller id=0] New partition creation callback for fcm-0 (kafka.controller.KafkaController)
[2020-04-21 23:37:53,941] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:37:53,942] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:37:53,943] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), fcm-0 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-21 23:37:53,943] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-21 23:37:53,943] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-21 23:42:53,943] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:42:53,956] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:42:53,957] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), fcm-0 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-21 23:42:53,958] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-21 23:42:53,958] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-21 23:45:49,100] DEBUG [Controller id=0] Delete topics listener fired for topics fcm to be deleted (kafka.controller.KafkaController)
[2020-04-21 23:45:49,102] INFO [Controller id=0] Starting topic deletion for topics fcm (kafka.controller.KafkaController)
[2020-04-21 23:45:49,106] INFO [Topic Deletion Manager 0] Handling deletion for topics fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:45:49,114] INFO [Topic Deletion Manager 0] Deletion of topic fcm (re)started (kafka.controller.TopicDeletionManager)
[2020-04-21 23:45:49,115] INFO [Topic Deletion Manager 0] Topic deletion callback for fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:45:49,133] INFO [Topic Deletion Manager 0] Partition deletion callback for fcm-0 (kafka.controller.TopicDeletionManager)
[2020-04-21 23:45:49,133] INFO [RequestSendThread controllerId=0] Controller 0 connected to admina-GL553VE:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-21 23:45:49,183] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=fcm,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-21 23:45:49,184] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=fcm,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-21 23:45:49,189] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=fcm,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-21 23:45:49,241] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(fcm-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-21 23:45:49,243] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=fcm,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-21 23:45:49,244] INFO [Topic Deletion Manager 0] Handling deletion for topics fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:45:49,294] INFO [Topic Deletion Manager 0] Deletion of topic fcm successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-21 23:45:49,317] INFO [Controller id=0] New topics: [Set(fcm)], deleted topics: [Set()], new partition replica assignment [Map(fcm-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-21 23:45:49,317] INFO [Controller id=0] New partition creation callback for fcm-0 (kafka.controller.KafkaController)
[2020-04-21 23:45:49,355] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-21 23:47:53,958] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:47:53,975] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:47:53,977] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), fcm-0 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-21 23:47:53,978] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-21 23:47:53,978] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-21 23:50:18,967] DEBUG [Controller id=0] Delete topics listener fired for topics fcm to be deleted (kafka.controller.KafkaController)
[2020-04-21 23:50:18,967] INFO [Controller id=0] Starting topic deletion for topics fcm (kafka.controller.KafkaController)
[2020-04-21 23:50:18,967] INFO [Topic Deletion Manager 0] Handling deletion for topics fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:18,967] INFO [Topic Deletion Manager 0] Deletion of topic fcm (re)started (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:18,967] INFO [Topic Deletion Manager 0] Topic deletion callback for fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:18,969] INFO [Topic Deletion Manager 0] Partition deletion callback for fcm-0 (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:18,973] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=fcm,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-21 23:50:18,973] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=fcm,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:18,973] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=fcm,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-21 23:50:18,989] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(fcm-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-21 23:50:18,989] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=fcm,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:18,989] INFO [Topic Deletion Manager 0] Handling deletion for topics fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:19,007] INFO [Topic Deletion Manager 0] Deletion of topic fcm successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:19,008] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-21 23:50:19,011] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-21 23:50:19,015] INFO [Controller id=0] New topics: [Set(fcm)], deleted topics: [Set()], new partition replica assignment [Map(fcm-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-21 23:50:19,015] INFO [Controller id=0] New partition creation callback for fcm-0 (kafka.controller.KafkaController)
[2020-04-21 23:50:54,339] DEBUG [Controller id=0] Delete topics listener fired for topics fcm to be deleted (kafka.controller.KafkaController)
[2020-04-21 23:50:54,350] INFO [Controller id=0] Starting topic deletion for topics fcm (kafka.controller.KafkaController)
[2020-04-21 23:50:54,350] INFO [Topic Deletion Manager 0] Handling deletion for topics fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:54,350] INFO [Topic Deletion Manager 0] Deletion of topic fcm (re)started (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:54,350] INFO [Topic Deletion Manager 0] Topic deletion callback for fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:54,352] INFO [Topic Deletion Manager 0] Partition deletion callback for fcm-0 (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:54,358] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=fcm,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-21 23:50:54,358] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=fcm,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:54,358] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=fcm,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-21 23:50:54,375] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(fcm-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-21 23:50:54,375] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=fcm,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:54,375] INFO [Topic Deletion Manager 0] Handling deletion for topics fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:54,408] INFO [Topic Deletion Manager 0] Deletion of topic fcm successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-21 23:50:54,409] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-21 23:50:54,411] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-21 23:50:54,413] INFO [Controller id=0] New topics: [Set(fcm)], deleted topics: [Set()], new partition replica assignment [Map(fcm-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-21 23:50:54,413] INFO [Controller id=0] New partition creation callback for fcm-0 (kafka.controller.KafkaController)
[2020-04-21 23:52:53,978] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:52:53,987] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:52:53,989] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), fcm-0 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-21 23:52:53,989] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-21 23:52:53,989] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-21 23:57:53,989] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-21 23:57:54,007] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-21 23:57:54,008] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), fcm-0 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-21 23:57:54,008] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-21 23:57:54,008] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-21 23:58:33,744] DEBUG [Controller id=0] Delete topics listener fired for topics fcm to be deleted (kafka.controller.KafkaController)
[2020-04-21 23:58:33,744] INFO [Controller id=0] Starting topic deletion for topics fcm (kafka.controller.KafkaController)
[2020-04-21 23:58:33,744] INFO [Topic Deletion Manager 0] Handling deletion for topics fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:58:33,744] INFO [Topic Deletion Manager 0] Deletion of topic fcm (re)started (kafka.controller.TopicDeletionManager)
[2020-04-21 23:58:33,744] INFO [Topic Deletion Manager 0] Topic deletion callback for fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:58:33,745] INFO [Topic Deletion Manager 0] Partition deletion callback for fcm-0 (kafka.controller.TopicDeletionManager)
[2020-04-21 23:58:33,751] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=fcm,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-21 23:58:33,751] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=fcm,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-21 23:58:33,752] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=fcm,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-21 23:58:33,766] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(fcm-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-21 23:58:33,766] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=fcm,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-21 23:58:33,767] INFO [Topic Deletion Manager 0] Handling deletion for topics fcm (kafka.controller.TopicDeletionManager)
[2020-04-21 23:58:33,784] INFO [Topic Deletion Manager 0] Deletion of topic fcm successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-21 23:58:33,784] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-21 23:58:33,787] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-21 23:58:33,790] INFO [Controller id=0] New topics: [Set(fcm)], deleted topics: [Set()], new partition replica assignment [Map(fcm-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-04-21 23:58:33,791] INFO [Controller id=0] New partition creation callback for fcm-0 (kafka.controller.KafkaController)
