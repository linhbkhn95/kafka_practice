[2020-04-19 01:00:25,304] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:00:25,305] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:00:25,306] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:05:25,306] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:05:25,336] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:05:25,337] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:10:25,337] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:10:25,344] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:10:25,344] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:15:25,345] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:15:25,357] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:15:25,357] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:20:25,358] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:20:25,358] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:20:25,358] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:25:25,359] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:25:25,382] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:25:25,383] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:30:25,384] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:30:25,393] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:30:25,393] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:35:25,394] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:35:25,394] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:35:25,395] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:40:25,395] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:40:25,414] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:40:25,415] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:45:25,415] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:45:25,415] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:45:25,416] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:50:25,416] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:50:25,421] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:50:25,422] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:55:25,423] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-19 01:55:25,436] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-19 01:55:25,437] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-19 01:58:15,492] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-04-19 01:58:15,494] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-04-19 01:58:15,495] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-04-19 01:58:15,500] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2020-04-19 01:58:16,642] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-19 01:58:16,643] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-19 01:58:16,643] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-19 01:58:16,643] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-04-19 01:58:16,643] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-19 01:58:16,644] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-19 01:58:16,645] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-19 01:58:16,645] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-04-19 01:58:16,645] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-04-19 01:58:16,645] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-04-19 01:58:16,647] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
